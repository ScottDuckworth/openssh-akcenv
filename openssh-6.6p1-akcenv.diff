diff --git a/auth2-pubkey.c b/auth2-pubkey.c
index 0fd27bb..7a81525 100644
--- a/auth2-pubkey.c
+++ b/auth2-pubkey.c
@@ -509,7 +509,8 @@ user_key_command_allowed2(struct passwd *user_pw, Key *key)
 	struct stat st;
 	int status, devnull, p[2], i;
 	pid_t pid;
-	char *username, errmsg[512];
+	long len;
+	char *username, *keytext, errmsg[512];
 
 	if (options.authorized_keys_command == NULL ||
 	    options.authorized_keys_command[0] != '/')
@@ -568,6 +569,37 @@ user_key_command_allowed2(struct passwd *user_pw, Key *key)
 		for (i = 0; i < NSIG; i++)
 			signal(i, SIG_DFL);
 
+		setenv(SSH_KEY_FINGERPRINT_ENV_NAME,
+			key_fingerprint(key, SSH_FP_MD5, SSH_FP_HEX), 1);
+
+		if ((f = tmpfile()) == NULL) {
+			error("%s: tmpfile: %s", __func__, strerror(errno));
+			_exit(1);
+		}
+		if (!key_write(key, f)) {
+			error("%s: key_write: %s", __func__, strerror(errno));
+			_exit(1);
+		}
+		if ((len = ftell(f)) == -1) {
+			error("%s: ftell: %s", __func__, strerror(errno));
+			_exit(1);
+		}
+		if ((keytext = xmalloc(len + 1)) == NULL) {
+			error("%s: xmalloc: %s", __func__, strerror(errno));
+			_exit(1);
+		}
+		if ((fseek(f, 0, SEEK_SET)) != 0) {
+			error("%s: fseek: %s", __func__, strerror(errno));
+			_exit(1);
+		}
+		if (fread(keytext, 1, len, f) != len) {
+			error("%s: fread: %s", __func__, strerror(errno));
+			_exit(1);
+		}
+		keytext[len] = '\0';
+		fclose(f);
+		setenv(SSH_KEY_ENV_NAME, keytext, 1);
+
 		if ((devnull = open(_PATH_DEVNULL, O_RDWR)) == -1) {
 			error("%s: open %s: %s", __func__, _PATH_DEVNULL,
 			    strerror(errno));
diff --git a/ssh.h b/ssh.h
index c94633b..411ea86 100644
--- a/ssh.h
+++ b/ssh.h
@@ -97,3 +97,15 @@
 
 /* Listen backlog for sshd, ssh-agent and forwarding sockets */
 #define SSH_LISTEN_BACKLOG		128
+
+/*
+ * Name of the environment variable containing the incoming key passed
+ * to AuthorizedKeysCommand.
+ */
+#define SSH_KEY_ENV_NAME "SSH_KEY"
+
+/*
+ * Name of the environment variable containing the incoming key fingerprint
+ * passed to AuthorizedKeysCommand.
+ */
+#define SSH_KEY_FINGERPRINT_ENV_NAME "SSH_KEY_FINGERPRINT"
